name: Publish & Lighthouse

on:
  push:
    branches:
      - main

jobs:
  lerna-publish:
    runs-on: ubuntu-latest
    permissions: write-all
    environment:
      name: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: 'https://npm.pkg.github.com'
          scope: '@acamae'

      - name: Create .npmrc file
        run: |
          echo "@acamae:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          cat .npmrc

      - name: Install dependencies
        run: npm ci

      - name: Configure git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Lerna version (conventional commits)
        run: 'npx lerna version --conventional-commits --yes --create-release github --message "chore(release): %s [skip ci]"'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: npx lerna publish from-git --yes

  lighthouse:
    runs-on: ubuntu-latest
    needs: lerna-publish
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Start static server
        run: |
          npx serve dist -s &
          sleep 10  # Wait for server to be ready

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

      - name: Save results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci

