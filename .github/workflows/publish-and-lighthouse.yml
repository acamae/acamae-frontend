name: Publish & Lighthouse

on:
  push:
    branches:
      - main

jobs:
  lerna-publish:
    runs-on: ubuntu-latest
    permissions: write-all
    environment:
      name: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: 'https://npm.pkg.github.com'
          scope: '@acamae'

      - name: Create .npmrc file
        run: |
          echo "@acamae:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${NPM_TOKEN}" >> .npmrc
          cat .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: npm ci
        env:
          NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Configure git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Step 1: Prepare environment
      - name: Prepare environment
        run: |
          git fetch --tags
          git config --global --add safe.directory /github/workspace
          rm -f CHANGELOG.md

      # Step 2: Versioning and Publishing
      - name: Publish to GitHub Packages
        run: |
          if npx lerna changed; then
            echo "Changes detected, proceeding with version and publish"
            npx lerna publish --yes
          else
            echo "No changes detected, skipping version and publish"
          fi
        env:
          NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN || secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN || secrets.GITHUB_TOKEN }}

  lighthouse:
    runs-on: ubuntu-latest
    needs: lerna-publish
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Start static server
        run: |
          npx serve dist -s &
          sleep 10  # Wait for server to be ready

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

      - name: Save results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci
